{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/workers/keyword.js","webpack:///./src/js/workers/builtins_es300.js","webpack:///./src/js/workers/builtins.js","webpack:///./src/js/workers/keyword_dictionary.js","webpack:///./src/js/workers/tokenizer.js","webpack:///./src/js/workers/keyword.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Keyword","constructor","data","this","type","render","args","members","snippet","getData","isFunction","isStruct","isVariable","builtins_es300","url","gl_Types","split","gl_Keywords","gl_TypesQualifiers","gl_PreProcessor","st_Uniforms","st_Variables","st_Exclusions","allTypes","concat","push","Builtins","init","console","log","dictionary","KeywordDictionary","registerBltins","list","categoryId","item","add","builtin","isType","str","isExclusionWord","exclusions","renderWords","structTypes","search","renderWord","searchWord","filter","word","forStruct","filteredKeys","keys","undefined","serachPos","indexOf","toUpperCase","filteredRenders","forEach","element","substring","isStructType","remove","Tokenizer","removePrecisions","gl_Precisions","prec","replace","RegExp","removePreProcessor","removeAllBetween","getBetweenStr","start","end","startPos","endPos","substr","length","removeStr","startRx","endRx","res","match","strComment","removeAllNested","regexp","deepestStart","lastIndexOf","deepestEnd","removeInlineComment","removeBlockComment","sanitizeLinesForStructs","tmp","trim","parseStructs","result","strStructs","strFull","strMembers","arrMembers","typeName","sanitizeLinesForMacroFunctionsVariables","parseMacroLine","parseFunctionLine","strArgs","arg","parseVariables","eqPos","cmPos","typeNames","j","getLinesArray","array","parseMacrosFunctionsVariables","lineStr","isMacro","arrPrevStructs","keywordDict","keyword_dictionary_KeywordDictionary","strPrevCodeFull","linesprevCodeWords","syncMacrosFunctionsVariables","dictName","strNewCodeFull","tokenizer","renewedLineNumbers","linesnewCodeWords","maxLen","Math","max","getRenewedLineNumbers","prevL","some","lineId","k","newL","syncUserDict","syncStructs","onmessage","msg","JSON","parse","builtins","content","strCode","curWord","filteredBuiltinsList","filteredUserList","filteredDict","text","sort","a","b","textA","textB","comparison","postMessage","stringify","filterDictByWord","filterStructByWord"],"mappings":"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","file":"worker.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app//js/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","//   _   _                                           _ \n//  ( ) ( )                                         ( )\n//  | |/'/'   __   _   _  _   _   _    _    _ __   _| |\n//  | , <   /'__`\\( ) ( )( ) ( ) ( ) /'_`\\ ( '__)/'_` |\n//  | |\\`\\ (  ___/| (_) || \\_/ \\_/ |( (_) )| |  ( (_| |\n//  (_) (_)`\\____)`\\__, |`\\___x___/'`\\___/'(_)  `\\__,_)\n//                ( )_| |                              \n//                `\\___/'                              \n\nexport default class Keyword\n{\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    constructor(data)\n    {\n        this.type = (data.type) ? data.type : null\n        this.name = (data.name) ? data.name : null\n        this.render = (data.render) ? data.render : null\n        this.args = (data.args) ? data.args : null\n        this.members = (data.members) ? data.members : null\n        this.snippet = (data.snippet) ? data.snippet : null\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    getData()\n    {\n        return {\n            type: this.type,\n            name: this.name,\n            render: this.render,\n            args: this.args,\n            members: this.members,\n            snippet: this.snippet\n        }\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isFunction()\n    {\n        return this.snippet !== null && this.args !== null\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isStruct()\n    {\n        return this.snippet !== null && this.members !== null\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isVariable()\n    {\n        return !this.isFunction() && !this.isStruct()\n    }\n}","const builtins_es300 = [\n\t{\n\t\tname: 'abs',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">abs</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'abs(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/abs.xhtml'\n\t},\n\t{\n\t\tname: 'acos',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">acos</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'acos(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/acos.xhtml'\n\t},\n\t{\n\t\tname: 'acosh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">acosh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'acosh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/acosh.xhtml'\n\t},\n\t{\n\t\tname: 'all',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'bvec', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">all</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'all(x@bvec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/all.xhtml'\n\t},\n\t{\n\t\tname: 'any',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'bvec', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">any</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'any(x@bvec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/any.xhtml'\n\t},\n\t{\n\t\tname: 'asin',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">asin</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'asin(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/asin.xhtml'\n\t},\n\t{\n\t\tname: 'asinh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">asinh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'asinh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/asinh.xhtml'\n\t},\n\t{\n\t\tname: 'atan',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'y' }, { type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">atan</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'atan(y@genType, x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/atan.xhtml'\n\t},\n\t{\n\t\tname: 'atanh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">atanh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'atanh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/atanh.xhtml'\n\t},\n\t{\n\t\tname: 'ceil',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">ceil</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'ceil(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/ceil.xhtml'\n\t},\n\t{\n\t\tname: 'clamp',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'minVal' }, { type: 'genType', name: 'maxVal' }],\n\t\trender: `<span class=\"autocomp-name\">clamp</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'clamp(x@genType, minVal@genType, maxVal@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/clamp.xhtml'\n\t},\n\t{\n\t\tname: 'cos',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'angle' }],\n\t\trender: `<span class=\"autocomp-name\">cos</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'cos(angle@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/cos.xhtml'\n\t},\n\t{\n\t\tname: 'cosh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">cosh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'cosh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/cosh.xhtml'\n\t},\n\t{\n\t\tname: 'cross',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec3', name: 'x' }, { type: 'vec3', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">cross</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'cross(x@vec3, y@vec3)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/cross.xhtml'\n\t},\n\t{\n\t\tname: 'degrees',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'radians' }],\n\t\trender: `<span class=\"autocomp-name\">degrees</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'degrees(radians@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/degrees.xhtml'\n\t},\n\t{\n\t\tname: 'determinant',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'matX', name: 'm' }],\n\t\trender: `<span class=\"autocomp-name\">determinant</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'determinant(m@matX)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/determinant.xhtml'\n\t},\n\t{\n\t\tname: 'dFdx',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'p' }],\n\t\trender: `<span class=\"autocomp-name\">dFdx</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'dFdx(p@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/dFdx.xhtml'\n\t},\n\t{\n\t\tname: 'dFdy',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'p' }],\n\t\trender: `<span class=\"autocomp-name\">dFdy</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'dFdy(p@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/dFdx.xhtml'\n\t},\n\t{\n\t\tname: 'distance',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'p0' }, { type: 'genType', name: 'p1' }],\n\t\trender: `<span class=\"autocomp-name\">distance</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'distance(p0@genType, p1@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/distance.xhtml'\n\t},\n\t{\n\t\tname: 'dot',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">dot</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'dot(x@genType, y@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/dot.xhtml'\n\t},\n\t{\n\t\tname: 'equal',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">equal</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'equal(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/equal.xhtml'\n\t},\n\t{\n\t\tname: 'exp',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">exp</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'exp(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/exp.xhtml'\n\t},\n\t{\n\t\tname: 'exp2',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">exp2</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'exp2(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/exp2.xhtml'\n\t},\n\t{\n\t\tname: 'faceforward',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'N' }, { type: 'genType', name: 'I' }, { type: 'genType', name: 'Nref' }],\n\t\trender: `<span class=\"autocomp-name\">faceforward</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'faceforward(N@genType, I@genType, Nref@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/faceforward.xhtml'\n\t},\n\t{\n\t\tname: 'floatBitsToInt',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">floatBitsToInt</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'floatBitsToInt(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/floatBitsToInt.xhtml'\n\t},\n\t{\n\t\tname: 'floatBitsToUint',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">floatBitsToUint</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'floatBitsToUint(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/floatBitsToInt.xhtml'\n\t},\n\t{\n\t\tname: 'floor',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">floor</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'floor(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/floor.xhtml'\n\t},\n\t{\n\t\tname: 'fract',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">fract</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'fract(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/fract.xhtml'\n\t},\n\t{\n\t\tname: 'fwidth',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'p' }],\n\t\trender: `<span class=\"autocomp-name\">fwidth</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'fwidth(p@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/fwidth.xhtml'\n\t},\n\t{\n\t\tname: 'greaterThan',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">greaterThan</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'greaterThan(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/greaterThan.xhtml'\n\t},\n\t{\n\t\tname: 'greaterThanEqual',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">greaterThanEqual</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'greaterThanEqual(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/greaterThanEqual.xhtml'\n\t},\n\t{\n\t\tname: 'intBitsToFloat',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genIType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">intBitsToFloat</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'intBitsToFloat(x@genIType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/intBitsToFloat.xhtml'\n\t},\n\t{\n\t\tname: 'uintBitsToFloat',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genUType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">uintBitsToFloat</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'uintBitsToFloat(x@genUType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/intBitsToFloat.xhtml'\n\t},\n\t{\n\t\tname: 'inverse',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'matX', name: 'm' }],\n\t\trender: `<span class=\"autocomp-name\">inverse</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'inverse(m@matX)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/inverse.xhtml'\n\t},\n\t{\n\t\tname: 'inversesqrt',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">inversesqrt</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'inversesqrt(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/inversesqrt.xhtml'\n\t},\n\t{\n\t\tname: 'isinf',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">isinf</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'isinf(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/isinf.xhtml'\n\t},\n\t{\n\t\tname: 'isnan',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">isnan</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'isnan(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/isnan.xhtml'\n\t},\n\t{\n\t\tname: 'length',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">length</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'length(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/length.xhtml'\n\t},\n\t{\n\t\tname: 'lessThan',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">lessThan</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'lessThan(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/lessThan.xhtml'\n\t},\n\t{\n\t\tname: 'lessThanEqual',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">lessThanEqual</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'lessThanEqual(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/lessThanEqual.xhtml'\n\t},\n\t{\n\t\tname: 'lessThanEqual',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">lessThanEqual</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'lessThanEqual(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/lessThanEqual.xhtml'\n\t},\n\t{\n\t\tname: 'log',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">log</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'log(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/log.xhtml'\n\t},\n\t{\n\t\tname: 'log2',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">log2</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'log2(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/log2.xhtml'\n\t},\n\t{\n\t\tname: 'max',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">max</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'max(x@genType, y@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/max.xhtml'\n\t},\n\t{\n\t\tname: 'min',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">min</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'min(x@genType, y@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/min.xhtml'\n\t},\n\t{\n\t\tname: 'mix',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'y' }, { type: 'genType', name: 'a' }],\n\t\trender: `<span class=\"autocomp-name\">mix</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'mix(x@genType, y@genType, a@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/mix.xhtml'\n\t},\n\t{\n\t\tname: 'mod',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'float', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">mod</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'mod(x@genType, y@float)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/mod.xhtml'\n\t},\n\t{\n\t\tname: 'modf',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'i' }],\n\t\trender: `<span class=\"autocomp-name\">modf</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'modf(x@genType, out_i@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/modf.xhtml'\n\t},\n\t{\n\t\tname: 'normalize',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'v' }],\n\t\trender: `<span class=\"autocomp-name\">normalize</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'normalize(v@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/normalize.xhtml'\n\t},\n\t{\n\t\tname: 'not',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'bvec', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">not</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'not(x@bvec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/not.xhtml'\n\t},\n\t{\n\t\tname: 'notEqual',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec', name: 'x' }, { type: 'vec', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">notEqual</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'notEqual(x@vec, y@vec)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/notEqual.xhtml'\n\t},\n\t{\n\t\tname: 'outerProduct',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec2', name: 'c' }, { type: 'vec2', name: 'r' }],\n\t\trender: `<span class=\"autocomp-name\">outerProduct</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'outerProduct(c@vec2, r@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/outerProduct.xhtml'\n\t},\n\t{\n\t\tname: 'packHalf2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec2', name: 'v' }],\n\t\trender: `<span class=\"autocomp-name\">packHalf2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'packHalf2x16(v@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/packHalf2x16.xhtml'\n\t},\n\t{\n\t\tname: 'packUnorm2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec2', name: 'v' }],\n\t\trender: `<span class=\"autocomp-name\">packUnorm2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'packUnorm2x16(v@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/packUnorm.xhtml'\n\t},\n\t{\n\t\tname: 'packSnorm2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'vec2', name: 'v' }],\n\t\trender: `<span class=\"autocomp-name\">packSnorm2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'packSnorm2x16(v@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/packUnorm.xhtml'\n\t},\n\t{\n\t\tname: 'pow',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }, { type: 'genType', name: 'y' }],\n\t\trender: `<span class=\"autocomp-name\">pow</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'pow(x@genType, y@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/pow.xhtml'\n\t},\n\t{\n\t\tname: 'radians',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'degrees' }],\n\t\trender: `<span class=\"autocomp-name\">radians</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'radians(degrees@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/radians.xhtml'\n\t},\n\t{\n\t\tname: 'reflect',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'I' }, { type: 'genType', name: 'N' }],\n\t\trender: `<span class=\"autocomp-name\">reflect</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'reflect(I@genType, N@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/reflect.xhtml'\n\t},\n\t{\n\t\tname: 'refract',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'I' }, { type: 'genType', name: 'N' }, { type: 'float', name: 'eta' }],\n\t\trender: `<span class=\"autocomp-name\">refract</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'refract(I@genType, N@genType, eta@float)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/refract.xhtml'\n\t},\n\t{\n\t\tname: 'round',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">round</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'round(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/round.xhtml'\n\t},\n\t{\n\t\tname: 'roundEven',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">roundEven</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'roundEven(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/roundEven.xhtml'\n\t},\n\t{\n\t\tname: 'sign',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">sign</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'sign(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/sign.xhtml'\n\t},\n\t{\n\t\tname: 'sin',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'angle' }],\n\t\trender: `<span class=\"autocomp-name\">sin</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'sin(angle@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/sin.xhtml'\n\t},\n\t{\n\t\tname: 'sinh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">sinh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'sinh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/sinh.xhtml'\n\t},\n\t{\n\t\tname: 'smoothstep',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'edge0' }, { type: 'genType', name: 'edge1' }, { type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">smoothstep</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'smoothstep(edge0@genType, edge1@genType, x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/smoothstep.xhtml'\n\t},\n\t{\n\t\tname: 'sqrt',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">sqrt</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'sqrt(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/sqrt.xhtml'\n\t},\n\t{\n\t\tname: 'step',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'edge' }, { type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">step</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'step(edge@genType, x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/step.xhtml'\n\t},\n\t{\n\t\tname: 'tan',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'angle' }],\n\t\trender: `<span class=\"autocomp-name\">tan</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'tan(angle@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/tan.xhtml'\n\t},\n\t{\n\t\tname: 'tanh',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">tanh</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'tanh(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/tanh.xhtml'\n\t},\n\t{\n\t\tname: 'texelFetch',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'ivec2', name: 'P' }, { type: 'int', name: 'lod' }],\n\t\trender: `<span class=\"autocomp-name\">texelFetch</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'texelFetch(sampler@gsampler2D, P@ivec2, lod@int)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/texelFetch.xhtml'\n\t},\n\t{\n\t\tname: 'texelFetchOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'ivec2', name: 'P' }, { type: 'int', name: 'lod' }, { type: 'ivec2', name: 'offset' }],\n\t\trender: `<span class=\"autocomp-name\">texelFetchOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'texelFetchOffset(sampler@gsampler2D, P@ivec2, lod@int, offset@ivec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/texelFetchOffset.xhtml'\n\t},\n\t{\n\t\tname: 'texture',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'float', name: 'bias' }],\n\t\trender: `<span class=\"autocomp-name\">texture</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'texture(sampler@gsampler2D, P@vec2, bias@float_array)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/texture.xhtml'\n\t},\n\t{\n\t\tname: 'textureGrad',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'vec2', name: 'dPdx' }, { type: 'vec2', name: 'dPdy' }],\n\t\trender: `<span class=\"autocomp-name\">textureGrad</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureGrad(sampler@gsampler2D, P@vec2, dPdx@vec2, dPdy@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureGrad.xhtml'\n\t},\n\t{\n\t\tname: 'textureGradOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'vec2', name: 'dPdx' }, { type: 'vec2', name: 'dPdy' }, { type: 'ivec2', name: 'offset' }],\n\t\trender: `<span class=\"autocomp-name\">textureGradOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureGradOffset(sampler@gsampler2D, P@vec2, dPdx@vec2, dPdy@vec2, ioffset@vec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureGradOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureLod',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'float', name: 'lod' }],\n\t\trender: `<span class=\"autocomp-name\">textureLod</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureLod(sampler@gsampler2D, P@vec2, lod@float)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureLod.xhtml'\n\t},\n\t{\n\t\tname: 'textureLodOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'float', name: 'lod' }, { type: 'ivec2', name: 'offset' }],\n\t\trender: `<span class=\"autocomp-name\">textureLodOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureLodOffset(sampler@gsampler2D, P@vec2, lod@float, offset@ivec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureLodOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec2', name: 'P' }, { type: 'ivec2', name: 'offset' }, { type: 'float', name: 'bias' }],\n\t\trender: `<span class=\"autocomp-name\">textureOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureOffset(sampler@gsampler2D, P@vec2, offset@ivec2, bias@float_array)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureProj',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'float', name: 'bias' }],\n\t\trender: `<span class=\"autocomp-name\">textureProj</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProj(sampler@gsampler2D, P@vec3, bias@float_array)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProj.xhtml'\n\t},\n\t{\n\t\tname: 'textureProjGrad',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'vec2', name: 'dPdx' }, { type: 'vec2', name: 'dPdy' }],\n\t\trender: `<span class=\"autocomp-name\">textureProjGrad</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProjGrad(sampler@gsampler2D, P@vec3, dPdx@vec2, dPdy@vec2',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProjGrad.xhtml'\n\t},\n\t{\n\t\tname: 'textureProjGradOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'vec2', name: 'dPdx' }, { type: 'vec2', name: 'dPdy' }, { type: 'ivec2', name: 'offset' }],\n\t\trender: `<span class=\"autocomp-name\">textureProjGradOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProjGradOffset(sampler@gsampler2D, P@vec3, dPdx@vec2, dPdy@vec2, offset@ivec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProjGradOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureProjLod',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'float', name: 'lod' }],\n\t\trender: `<span class=\"autocomp-name\">textureProjLod</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProjLod(sampler@gsampler2D, P@vec3, lod@float)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProjLod.xhtml'\n\t},\n\t{\n\t\tname: 'textureProjLodOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'float', name: 'lod' }, { type: 'ivec2', name: 'offset' }],\n\t\trender: `<span class=\"autocomp-name\">textureProjLodOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProjLodOffset(sampler@gsampler2D, P@vec3, lod@float, offset@ivec2)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProjLodOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureProjOffset',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'vec3', name: 'P' }, { type: 'ivec2', name: 'offset' }, { type: 'float', name: 'bias' }],\n\t\trender: `<span class=\"autocomp-name\">textureProjOffset</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureProjOffset(sampler@gsampler2D, P@vec3, offset@ivec2, bias@float_array)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureProjOffset.xhtml'\n\t},\n\t{\n\t\tname: 'textureSize',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'gsampler2D', name: 'sampler' }, { type: 'int', name: 'lod' }],\n\t\trender: `<span class=\"autocomp-name\">textureSize</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'textureSize(sampler@gsampler2D, lod@int)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/textureSize.xhtml'\n\t},\n\t{\n\t\tname: 'transpose',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'matX', name: 'm' }],\n\t\trender: `<span class=\"autocomp-name\">transpose</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'transpose(m@matX)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/transpose.xhtml'\n\t},\n\t{\n\t\tname: 'trunc',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">trunc</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'trunc(x@genType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/trunc.xhtml'\n\t},\n\t{\n\t\tname: 'intBitsToFloat',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genIType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">intBitsToFloat</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'intBitsToFloat(x@genIType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/intBitsToFloat.xhtml'\n\t},\n\t{\n\t\tname: 'uintBitsToFloat',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'genUType', name: 'x' }],\n\t\trender: `<span class=\"autocomp-name\">uintBitsToFloat</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'uintBitsToFloat(x@genUType)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/intBitsToFloat.xhtml'\n\t},\n\t{\n\t\tname: 'unpackHalf2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'uint', name: 'v' }],\n\t\trender: `<span class=\"autocomp-name\">unpackHalf2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'unpackHalf2x16(v@uint)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/unpackHalf2x16.xhtml'\n\t},\n\t{\n\t\tname: 'unpackSnorm2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'uint', name: 'p' }],\n\t\trender: `<span class=\"autocomp-name\">unpackSnorm2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'unpackSnorm2x16(p@uint)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/unpackUnorm.xhtml'\n\t},\n\t{\n\t\tname: 'unpackUnorm2x16',\n\t\ttype: 'builtin',\n\t\targs: [{ type: 'uint', name: 'p' }],\n\t\trender: `<span class=\"autocomp-name\">unpackUnorm2x16</span><div class=\"icon-code-gl\"></div><span class=\"autocomp-type\">builtin</span>`,\n\t\tsnippet: 'unpackUnorm2x16(p@uint)',\n\t\turl: 'https: //www.khronos.org/registry/OpenGL-Refpages/es3.0/html/unpackUnorm.xhtml'\n\t}\n]\n\nexport default builtins_es300","//   ___              _    _                   \n//  (  _`\\         _ (_ ) ( )_  _              \n//  | (_) ) _   _ (_) | | | ,_)(_)  ___    ___ \n//  |  _ <'( ) ( )| | | | | |  | |/' _ `\\/',__)\n//  | (_) )| (_) || | | | | |_ | || ( ) |\\__, \\\n//  (____/'`\\___/'(_)(___)`\\__)(_)(_) (_)(____/\n//                                             \n\nimport KeywordDictionary from './keyword_dictionary'\nimport Keyword from './keyword'\nimport builtins_es300 from './builtins_es300'\n\n// Builtin lists\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst gl_Types = (\"float vec2 vec3 vec4 int ivec2 ivec3 ivec4 bool bvec2 bvec3 bvec4 mat2 mat3 mat4 void\").split(\" \")\nconst gl_Keywords = (\"break continue do for while if else true false lowp mediump highp precision discard return\").split(\" \")\nconst gl_TypesQualifiers = (\"in out inout const\").split(\" \")\nconst gl_PreProcessor = (\"#define #undef #if #ifdef #ifndef #else #elif #endif\").split(\" \")\n// const gl_Builtins = (\"sin cos tan asin acos atan atan radians degrees pow exp log exp2 log2 sqrt inversesqrt abs ceil clamp floor fract max min mix mod sign smoothstep step ftransform cross distance dot faceforward length normalize reflect refract dFdx dFdy fwidth matrixCompMult all any equal greaterThan greaterThanEqual lessThan lessThanEqual notEqual texelFetch texture textureLod\").split(\" \")\nconst st_Uniforms = (\"iResolution iTime iTimeDelta iFrame iFrameRate iDate iMouse iChannel0 iChannel1 iChannel2 iChannel3 iSampleRate\").split(\" \")\nconst st_Variables = (\"fragColor fragCoord\").split(\" \")\nconst st_Exclusions = (\"mainImage mainSound mainCubemap mainVR\").split(\" \")\nconst allTypes = gl_Types.concat()\nallTypes.push('#define') // For detecting \"#define\" as type.\n\nconst Builtins = {\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    init()\n    {\n        console.log('started: Builtins.init...')\n        this.dictionary = new KeywordDictionary('Builtins')\n        const registerBltins = (list, type, categoryId) =>\n        {\n            for (const item of list)\n            {\n                this.dictionary.add(\n                    new Keyword(\n                        {\n                            type: 'fixed',\n                            name: item,\n                            render: `<span class=\"autocomp-name\">${item}</span><div class=\"icon-code-${categoryId}\"></div><span class=\"autocomp-type\">${type}</span>`\n                        }),\n                )\n            }\n        }\n        registerBltins(gl_Types, 'types', 'gl')\n        registerBltins(gl_Keywords, 'keywords', 'gl')\n        registerBltins(gl_TypesQualifiers, 'type qualifier', 'gl')\n        registerBltins(gl_PreProcessor, 'pre processor', 'gl')\n        registerBltins(st_Uniforms, 'uniform', 'st')\n        registerBltins(st_Variables, 'variable', 'st')\n\n        // registerBltins(gl_Builtins, 'builtin', 'gl')\n        for (const builtin of builtins_es300)\n        {\n            this.dictionary.add(new Keyword(builtin))\n        }\n    },\n\n    // Check if the word is a type.\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isType(str)\n    {\n        for (const type of allTypes)\n        {\n            if (str === type) return true\n        }\n        return false\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isExclusionWord(name)\n    {\n        for (const exclusions of st_Exclusions)\n        {\n            if (name === exclusions) return true\n        }\n        return false\n    }\n}\n\nexport default Builtins","//   _   _                                           _         \n//  ( ) ( )                                         ( )        \n//  | |/'/'   __   _   _  _   _   _    _    _ __   _| |        \n//  | , <   /'__`\\( ) ( )( ) ( ) ( ) /'_`\\ ( '__)/'_` |        \n//  | |\\`\\ (  ___/| (_) || \\_/ \\_/ |( (_) )| |  ( (_| |        \n//  (_) (_)`\\____)`\\__, |`\\___x___/'`\\___/'(_)  `\\__,_)        \n//                ( )_| |                                      \n//                `\\___/'                                      \n//   ___              _                                        \n//  (  _`\\  _        ( )_  _                                   \n//  | | ) |(_)   ___ | ,_)(_)   _     ___     _ _  _ __  _   _ \n//  | | | )| | /'___)| |  | | /'_`\\ /' _ `\\ /'_` )( '__)( ) ( )\n//  | |_) || |( (___ | |_ | |( (_) )| ( ) |( (_| || |   | (_) |\n//  (____/'(_)`\\____)`\\__)(_)`\\___/'(_) (_)`\\__,_)(_)   `\\__, |\n//                                                      ( )_| |\n//                                                      `\\___/'\n\nimport Builtins from './builtins'\n\nexport default class KeywordDictionary\n{\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    constructor(name)\n    {\n        this.name = name\n        this.renderWords = {}\n        this.structTypes = []\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    search(renderWord)\n    {\n        const searchWord = `${renderWord.type}@${renderWord.name}`\n        return this.renderWords.hasOwnProperty(searchWord);// return in Boolean\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    filter(word, forStruct = false)\n    {\n        const filteredKeys = Object.keys(this.renderWords).filter((item) =>\n        {\n            if (item !== undefined && word !== undefined)\n            {\n                const serachPos = item.indexOf('@') + 1\n                const isIncluded = (item.toUpperCase().indexOf(word.toUpperCase(), serachPos) === serachPos ? true : false)\n                return isIncluded && (item.toUpperCase() !== word.toUpperCase() || forStruct)\n            }\n        })\n\n        let filteredRenders = []\n\n        filteredKeys.forEach(element =>\n        {\n            const name = element.substring(element.indexOf(\"@\") + 1)\n            if ((word !== name || forStruct) && !Builtins.isExclusionWord(name))\n            {\n                filteredRenders.push(this.renderWords[element].getData())\n            }\n        })\n\n        return filteredRenders\n    }\n\n    // Check if the word is a type.\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    isStructType(str)\n    {\n        for (const type of this.structTypes)\n        {\n            if (str === type) return true\n        }\n        return false\n    }\n\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    add(renderWord)\n    {\n        const key = `${renderWord.type}@${renderWord.name}`\n\n        this.renderWords[key] = renderWord\n\n        if (renderWord.type === 'struct')\n        {\n            this.structTypes.push(renderWord.name)\n        }\n    }\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    remove(renderWord)\n    {\n        if (renderWord.type === undefined || renderWord.name === undefined) return\n\n        const key = `${renderWord.type}@${renderWord.name}`\n        delete this.renderWords[key]\n\n        if (renderWord.type === 'struct')\n        {\n            this.structTypes = this.structTypes.filter(type =>\n            {\n                return type !== renderWord.name\n            })\n        }\n    }\n}\n","//   _____       _                                         \n//  (_   _)     ( )                   _                    \n//    | |   _   | |/')    __    ___  (_) ____    __   _ __ \n//    | | /'_`\\ | , <   /'__`\\/' _ `\\| |(_  ,) /'__`\\( '__)\n//    | |( (_) )| |\\`\\ (  ___/| ( ) || | /'/_ (  ___/| |   \n//    (_)`\\___/'(_) (_)`\\____)(_) (_)(_)(____)`\\____)(_)   \n\nimport Keyword from './keyword'\nimport Builtins from './builtins'\n\nconst Tokenizer = {\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removePrecisions(str)\n    {\n        const gl_Precisions = (\"lowp mediump highp\").split(\" \")\n        for (const prec of gl_Precisions)\n        {\n            str = str.replace(new RegExp(prec, 'g'), ' ')\n        }\n        return str\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removePreProcessor(str)\n    {\n        const gl_PreProcessor = (\"#undef #ifdef #ifndef #else #elif #endif #if\").split(\" \")\n        for (const prec of gl_PreProcessor)\n        {\n            str = this.removeAllBetween(str, new RegExp(prec, 'g'), /\\\\n/g, prec, '\\n')\n        }\n        return str\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    getBetweenStr(str, start, end)\n    {\n        const startPos = str.indexOf(start)\n        const endPos = str.indexOf(end, startPos)\n        return str.substr(startPos, endPos - startPos + end.length)\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removeStr(str, removeStr)\n    {\n        return str.replace(removeStr, '')\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removeAllBetween(str, startRx, endRx, start, end)\n    {\n        let res = str + ''\n        if (!(res.match(startRx) && res.match(endRx)))\n        {\n            return str\n        }\n\n        while (res.match(startRx) && res.match(endRx))\n        {\n            const strComment = this.getBetweenStr(res, start, end)\n            console.log(strComment)\n            res = res.replace(strComment, '')\n        }\n        return res\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removeAllNested(str, regexp, start, end)\n    {\n        let res = str + ''\n        let deepestStart = str.lastIndexOf(start)\n        let deepestEnd = str.indexOf(end, deepestStart)\n        if (!res.match(regexp))\n        {\n            return str\n        }\n\n        while (res.match(regexp))\n        {\n            res = res.replace(res.substr(deepestStart, deepestEnd - deepestStart + 1), '')\n            deepestStart = res.lastIndexOf(start)\n            deepestEnd = res.indexOf(end, deepestStart)\n        }\n        return res\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removeInlineComment(str)\n    {\n        return this.removeAllBetween(str, /\\/\\//g, /\\\\n/g, '//', '\\n')\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    removeBlockComment(str)\n    {\n        return this.removeAllBetween(str, /\\/\\*/g, /\\*\\//g, '/*', '*/')\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    sanitizeLinesForStructs(str)\n    {\n        let res = ''\n        res = str.replace(/(?=[ ]+)\\,/g, ',')\n\n        let tmp = res + ''\n        res = ''\n\n        tmp.split(/\\r\\n|\\r|\\n/g).forEach(element =>\n        {\n            element = element.split(/\\/\\//g)[0].trim()\n            if (element !== '')\n            {\n                res += element\n            }\n        })\n        return res\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    parseStructs(str)\n    {\n        let result = []\n        str = this.sanitizeLinesForStructs(str)\n        const isContainStruct = str.match(/struct/g)\n\n        if (!isContainStruct)\n        {\n            return []\n        }\n\n        let strStructs = []\n        while (str.match(/struct/g))\n        {\n            strStructs.push(this.getBetweenStr(str, 'struct', '}'))\n            let strFull = strStructs[strStructs.length - 1]\n            str = this.removeStr(str, strFull)\n\n            let strMembers = this.getBetweenStr(strFull, '{', '}')\n            strFull = this.removeStr(strFull, strMembers)\n            strMembers = this.removeStr(strMembers, /\\{|\\}/g)\n            strMembers = strMembers.replace(/; |;| ;/g, ';')\n            strMembers = strMembers.replace(/[ ]+/g, ' ')\n\n            const arrMembers = strMembers.split(';')\n            let members = []\n            for (let i = 0; i < arrMembers.length; i++)\n            {\n                let typeName = arrMembers[i].split(' ')\n                if (typeName[0] && typeName[1])\n                {\n                    members.push(new Keyword({\n                        type: typeName[0],\n                        name: typeName[1],\n                        render: `<span class=\"autocomp-name\">${typeName[1]}</span><div class=\"icon-code-usr-vr\"></div><span class=\"autocomp-type\">${typeName[0]}</span>`\n                    }))\n                }\n            }\n\n            const typeName = strFull.split(' ')\n            const name = typeName[1]\n            let snippet = name\n            snippet += ' var_name = '\n            snippet += name\n            snippet += '('\n            for (let i = 0; i < members.length; i++)\n            {\n                snippet += members[i].name\n                snippet += '@'\n                snippet += members[i].type\n                snippet += (i < members.length - 1) ? ', ' : ''\n            }\n            snippet += ');'\n\n            result.push(new Keyword({\n                type: typeName[0],\n                name: name,\n                members: members,\n                render: `<span class=\"autocomp-name\">${name}</span><div class=\"icon-code-usr-st\"></div><span class=\"autocomp-type\">${typeName[0]}</span>`,\n                snippet: snippet\n            }))\n        }\n\n        return result\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    sanitizeLinesForMacroFunctionsVariables(str)\n    {\n        let res = ''\n        str = this.removeAllBetween(str, /struct/g, /\\}/g, 'struct', '}')\n        str.split(/\\r\\n|\\r|\\n/g).forEach(element =>\n        {\n            element = element.replace(/\\{/g, '{;')\n            element = this.removeStr(element, /\\}/g)\n            element = this.removeStr(element, /(?<=[.])([xyz]+)/g)\n            element = element.replace(/[ ]+/g, ' ')\n            element = element.trim()\n            if (element.match(/\\/\\//g))\n            {\n                element = ''\n            }\n            if (element.match(/precision/g))\n            {\n                element = ''\n            }\n            if (element.match(/#define/g))\n            {\n                element += ';'\n            }\n            if (element !== '')\n            {\n                res += element\n            }\n        })\n        return res\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    parseMacroLine(str)\n    {\n        let result = []\n        str = this.removeAllBetween(str, /\\(/g, /\\)/g, '(', ')').trim()\n        const typeName = str.split(' ')\n        result.push(new Keyword({\n            type: typeName[0],\n            name: typeName[1],\n            render: `<span class=\"autocomp-name\">${typeName[1]}</span><div class=\"icon-code-usr-m\"></div><span class=\"autocomp-type\">${typeName[0]}</span>`\n        }))\n        return result\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    parseFunctionLine(str)\n    {\n        let result = []\n\n        str = str.replace(/\\s/g, ' ')\n        str = str.replace(/[ ]+/g, ' ')\n        str = str.trim()\n\n        // args\n        let args = []\n        let strArgs = this.getBetweenStr(str, '(', ')')\n\n        strArgs = this.removeStr(strArgs, /[()]/g)\n\n        // strArgs = 'inout int pepe, int in pepein , out int pepein ' // rncd\n\n        strArgs = strArgs.trim()\n        strArgs = strArgs.replace(/\\s+/g, ' ')\n        strArgs = strArgs.replace(/\t',/g, ' ')\n\n        strArgs = strArgs.replace(/^inout\\s/g, ' ')\n        strArgs = strArgs.replace(/\\sinout\\s/g, ' ')\n        strArgs = strArgs.replace(/\\,inout\\s/g, ' ')\n\n        strArgs = strArgs.replace(/^const\\s/g, ' ')\n        strArgs = strArgs.replace(/\\sconst\\s/g, ' ')\n        strArgs = strArgs.replace(/\\,const\\s/g, ' ')\n\n        strArgs = strArgs.replace(/^out\\s/g, ' ')\n        strArgs = strArgs.replace(/\\sout\\s/g, ' ')\n        strArgs = strArgs.replace(/\\,out\\s/g, ' ')\n\n        strArgs = strArgs.replace(/^in\\s/g, ' ')\n        strArgs = strArgs.replace(/\\sin\\s/g, ' ')\n        strArgs = strArgs.replace(/\\,in\\s/g, ' ')\n\n        strArgs = strArgs.replace(/[ ]+/g, ' ')\n        strArgs = strArgs.trim()\n\n        // console.log(strArgs) // rncd\n\n        strArgs = strArgs.split(',')\n        for (let i = 0; i < strArgs.length; i++)\n        {\n            let arg = strArgs[i].trim().split(/ /g)\n            if (arg[0] && arg[1])\n            {\n                args.push(new Keyword({\n                    type: arg[0],\n                    name: arg[1],\n                    render: `<span class=\"autocomp-name\">${arg[1]}</span><div class=\"icon-code-usr-vr\"></div><span class=\"autocomp-type\">${arg[0]}</span>`\n                }))\n            }\n        }\n\n        const typeName = str.split(/[ (]/g)\n        const name = typeName[1]\n        let snippet = name + '('\n        for (let i = 0; i < args.length; i++)\n        {\n            snippet += args[i].name\n            snippet += '@'\n            snippet += args[i].type\n            snippet += (i < args.length - 1) ? ', ' : ''\n        }\n        snippet += ')'\n\n        // type/name\n        result.push(new Keyword({\n            type: typeName[0],\n            name: typeName[1],\n            args: args,\n            render: `<span class=\"autocomp-name\">${typeName[1]}</span><div class=\"icon-code-usr-fx\"></div><span class=\"autocomp-type\">${typeName[0]}</span>`,\n            snippet: snippet\n        }))\n        return result\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    parseVariables(str)\n    {\n        let result = []\n        //#1: remove brackets\n        str = this.removeAllNested(str, /\\(|\\)/g, '(', ')')\n\n        //#2: remove initializing \n        let eqPos = str.indexOf('=')\n        let cmPos = str.indexOf(/,/g)\n        cmPos = (cmPos === -1) ? str.length : cmPos\n\n        if (str.match('='))\n        {\n            while (str.match('='))\n            {\n                str = str.replace(str.substr(eqPos, cmPos - eqPos + 1), '')\n                eqPos = str.indexOf('=')\n                cmPos = str.indexOf(/,/g)\n                cmPos = (cmPos === -1) ? str.length : cmPos\n            }\n        }\n\n        str = str.replace(/ ,|, |,/g, ',')\n\n        const typeNames = str.split(/[ ,]/g)\n        const type = typeNames[0]\n        for (let j = 1; j < typeNames.length; j++)\n        {\n            if (typeNames[j] !== '')\n            {\n                result.push(new Keyword({\n                    type: type,\n                    name: typeNames[j],\n                    render: `<span class=\"autocomp-name\">${typeNames[j]}</span><div class=\"icon-code-usr\"></div><span class=\"autocomp-type\">${type}</span>`\n                }))\n            }\n        }\n        return result\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    getLinesArray(str)\n    {\n        let array = []\n        str.split(';').forEach(element =>\n        {\n            if (!element.match(/if|else|switch|for|return/g))\n            {\n                array.push(element)\n            }\n        })\n        return array\n    },\n\n    //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    parseMacrosFunctionsVariables(str, structTypes = [])\n    {\n        const isStructType = (str, list) =>\n        {\n            for (const type of list)\n            {\n                if (str === type) return true\n            }\n            return false\n        }\n\n        str = this.sanitizeLinesForStructs(str)\n\n        let result = []\n\n        const array = this.getLinesArray(str)\n\n        for (let i = 0; i < array.length; i++)\n        {\n            const lineStr = array[i].trim()\n            const isMacro = lineStr.match(/#define/g)\n            const isFunction = lineStr.match(/{/g)\n            const isDefinition = Builtins.isType(lineStr.split(' ')[0]) || isStructType(lineStr.split(' ')[0], structTypes)\n\n            if (!isDefinition) continue\n\n            if (isMacro)\n            {\n                result.push(this.parseMacroLine(lineStr))\n            }\n            else if (isFunction)\n            {\n                result.push(this.parseFunctionLine(lineStr))\n            }\n            else\n            {\n                result.push(this.parseVariables(lineStr))\n            }\n        }\n        // console.log('parseMacrosFunctionsVariables:result: ', result)\n        return result\n    }\n}\n\nexport default Tokenizer","//   _   _                                           _ \n//  ( ) ( )                                         ( )\n//  | |/'/'   __   _   _  _   _   _    _    _ __   _| |\n//  | , <   /'__`\\( ) ( )( ) ( ) ( ) /'_`\\ ( '__)/'_` |\n//  | |\\`\\ (  ___/| (_) || \\_/ \\_/ |( (_) )| |  ( (_| |\n//  (_) (_)`\\____)`\\__, |`\\___x___/'`\\___/'(_)  `\\__,_)\n//                ( )_| |                              \n//                `\\___/'                              \n//   _       _               _                         \n//  ( )  _  ( )             ( )                        \n//  | | ( ) | |   _    _ __ | |/')    __   _ __        \n//  | | | | | | /'_`\\ ( '__)| , <   /'__`\\( '__)       \n//  | (_/ \\_) |( (_) )| |   | |\\`\\ (  ___/| |          \n//  `\\___x___/'`\\___/'(_)   (_) (_)`\\____)(_)          \n//                                                     \n\nimport KeywordDictionary from './keyword_dictionary'\nimport Keyword from './keyword'\nimport Tokenizer from './tokenizer'\nimport Builtins from './builtins'\n\nlet strPrevStructCode = ''\nlet arrPrevStructs = []\n\n// Dictionaries\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst keywordDict = {}\nkeywordDict['Builtins'] = new KeywordDictionary('Builtins')\nkeywordDict['BufferA'] = new KeywordDictionary('BufferA')\nkeywordDict['BufferB'] = new KeywordDictionary('BufferB')\nkeywordDict['BufferC'] = new KeywordDictionary('BufferC')\nkeywordDict['BufferD'] = new KeywordDictionary('BufferD')\nkeywordDict['Image'] = new KeywordDictionary('Image')\nkeywordDict['Sound'] = new KeywordDictionary('Sound')\nkeywordDict['Common'] = new KeywordDictionary('Common')\n\nlet strPrevCodeFull = ''\nlet linesprevCodeWords = ['']\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst initBltinDict = () =>\n{\n    Builtins.init()\n    keywordDict['Builtins'] = Builtins.dictionary\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst filterDictByWord = (dictName, curWord) =>\n{\n    console.log('started: KeywordWorker.filterDictByWord...')\n    const filteredBuiltinsList = keywordDict['Builtins'].filter(curWord)\n    const filteredUserList = keywordDict[dictName].filter(curWord)\n    const filteredDict = filteredBuiltinsList.concat(filteredUserList)\n\n    if (filteredDict.length >= 1 || (filteredDict[0] !== undefined && filteredDict[0].text !== undefined && filteredDict.length === 1 && filteredDict[0].text.toUpperCase() !== curWord.toUpperCase()))\n    {\n        filteredDict.sort((a, b) =>\n        {\n            // Use toUpperCase() to ignore character casing\n            const textA = a.name.toUpperCase()\n            const textB = b.name.toUpperCase()\n\n            let comparison = 0\n            if (textA > textB)\n            {\n                comparison = 1\n            } else if (textA < textB)\n            {\n                comparison = -1\n            }\n\n            return comparison\n        })\n    }\n\n    postMessage(JSON.stringify({ name: 'filter_succeed', content: { list: filteredDict } }, null, \"\\t\"))\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst filterStructByWord = (dictName, curWord) =>\n{\n    console.log('started: KeywordWorker.filterStructByWord...', curWord)\n\n    let filteredDict = keywordDict[dictName].filter(curWord, true)\n\n    if (filteredDict.length === 1)//|| (filteredDict[0] !== undefined && filteredDict[0].text !== undefined && filteredDict.length === 1 && filteredDict[0].text.toUpperCase() !== curWord.toUpperCase()))\n    {\n        filteredDict = keywordDict[dictName].filter(filteredDict[0].type)\n        if (filteredDict[0].members !== null)\n        {\n            postMessage(JSON.stringify({ name: 'filter_succeed', content: { list: filteredDict[0].members } }, null, \"\\t\"))\n        }\n    }\n    postMessage(JSON.stringify({ name: 'filter_failed', content: null }, null, \"\\t\"))\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst getRenewedLineNumbers = (str) =>\n{\n    let renewedLineNumbers = []\n    const linesnewCodeWords = str.split(';')\n    const maxLen = Math.max(linesprevCodeWords.length, linesnewCodeWords.length)\n    for (let i = 0; i < maxLen; i++)\n    {\n        if (linesprevCodeWords[i] === undefined) linesprevCodeWords[i] = ''\n        if (linesnewCodeWords[i] === undefined) linesnewCodeWords[i] = ''\n        if (linesprevCodeWords[i] !== linesnewCodeWords[i])// || linesnewCodeWords[i].match(/{/))\n        {\n            renewedLineNumbers.push(i)\n        }\n    }\n    linesprevCodeWords = linesnewCodeWords\n    return renewedLineNumbers\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst syncStructs = (dictName, str) =>\n{\n    const result = Tokenizer.parseStructs(str)\n    if (result.length >= 1)\n    {\n        if (arrPrevStructs.length > 0)\n        {\n            for (let i = 0; i < arrPrevStructs.length; i++)\n            {\n                for (let j = 0; j < arrPrevStructs[i].length; j++)\n                {\n                    keywordDict[dictName].remove(result[i][j])\n                }\n            }\n        }\n\n        arrPrevStructs = result.concat()\n\n        // Found structs...\n        for (let i = 0; i < result.length; i++)\n        {\n            keywordDict[dictName].add(result[i])\n        }\n    }\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst syncMacrosFunctionsVariables = (dictName, str) =>\n{\n    const strNewCodeFull = Tokenizer.sanitizeLinesForMacroFunctionsVariables(str)\n    const renewedLineNumbers = getRenewedLineNumbers(strNewCodeFull)\n\n    if (strPrevCodeFull !== '')\n    {\n        const prevL = strPrevCodeFull.split(/\\;/)\n        for (let i = 0; i < prevL.length; i++)\n        {\n            if (renewedLineNumbers.some(lineId => lineId === i))\n            {\n                const renderWords = Tokenizer.parseMacrosFunctionsVariables(prevL[i], keywordDict[dictName].structTypes)\n                for (let j = 0; j < renderWords.length; j++)\n                {\n                    for (let k = 0; k < renderWords[j].length; k++)\n                    {\n                        keywordDict[dictName].remove(renderWords[j][k])\n                    }\n                }\n            }\n        }\n    }\n\n    if (strNewCodeFull !== '')\n    {\n        const newL = strNewCodeFull.split(/\\;/)\n        for (let i = 0; i < newL.length; i++)\n        {\n            if (renewedLineNumbers.some(lineId => lineId === i))\n            {\n                const renderWords = Tokenizer.parseMacrosFunctionsVariables(newL[i], keywordDict[dictName].structTypes)\n                for (let j = 0; j < renderWords.length; j++)\n                {\n                    for (let k = 0; k < renderWords[j].length; k++)\n                    {\n                        keywordDict[dictName].add(renderWords[j][k])\n                    }\n                }\n            }\n        }\n    }\n    strPrevCodeFull = strNewCodeFull\n}\n\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconst syncUserDict = (dictName, str) =>\n{\n    str = Tokenizer.removeBlockComment(str)\n    str = Tokenizer.removeInlineComment(str)\n    str = Tokenizer.removePrecisions(str)\n    str = Tokenizer.removePreProcessor(str)\n\n    syncStructs(dictName, str)\n\n    syncMacrosFunctionsVariables(dictName, str)\n}\n\n// Message\n//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nonmessage = (msg) =>\n{\n    const data = JSON.parse(msg.data)\n    console.log('Worker got message: ', data)\n    switch (data.name)\n    {\n        case 'initBltinDict':\n            initBltinDict()\n            break\n\n        case 'syncUserDict':\n            syncUserDict(data.content.dictName, data.content.strCode)\n            break\n\n        case 'filterDictByWord':\n            filterDictByWord(data.content.dictName, data.content.curWord)\n            break\n\n        case 'filterStructByWord':\n            filterStructByWord(data.content.dictName, data.content.curWord)\n            break\n\n        default:\n            break\n    }\n}"],"sourceRoot":""}